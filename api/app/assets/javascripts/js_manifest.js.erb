// https://github.com/johnnypez/assets_js - modified by Steven Sherrie (steve@wasteofpaper.com)

// Copyright (c) 2012 jbutler

// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:

// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

<%
  manifest = {}
  app = Rails.application
  env = app.assets
  env.each_logical_path do |logical_path|
    if File.basename(logical_path)[/[^\.]+/, 0] == 'index'
      logical_path.sub!(/\/index\./, '.')
    end

    # grabbed from Sprockets::Environment#find_asset
    pathname = Pathname.new(logical_path)
    if pathname.absolute?
      return unless stat(pathname)
      logical_path = attributes_for(pathname).logical_path
    else
      begin
        pathname = resolve(logical_path)
      rescue Sprockets::FileNotFound
        return nil
      end
    end

    asset = Sprockets::Asset.new(env, logical_path, pathname)
    manifest[logical_path] = app.config.assets.digest ? asset.digest_path : asset.logical_path
  end
%>

'use strict';

!function(window, document, undefined){
  
  var asset_host = <%= app.config.action_controller.asset_host.to_json %>;
  var manifest = <%= ActiveSupport::JSON.encode(manifest) %>;
  
  function asset_path(path){
    if(manifest.hasOwnProperty(path)){
      return '/assets/' + manifest[path];
    }
    else{
      throw Error('missing asset: ' + path);
    }
  };

  function asset_url(path){
    if (asset_host){
      return  window.location.protocol + asset_host + asset_path(path);
    } else {
      return window.location.protocol + '//' + window.location.host + asset_path(path);
    }
  };

  window.asset_path = asset_path;
  window.asset_url = asset_url;
  window.manifest = manifest;
  
}(window, document);